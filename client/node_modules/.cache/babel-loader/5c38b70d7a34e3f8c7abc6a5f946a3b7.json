{"ast":null,"code":"import { REQUEST_POKEMONS, REQUEST_POKEMONS_BY_ID, REQUEST_POKEMONS_BY_NAME, FILTER_BY_ATTACK_HIGH, FILTER_BY_ATTACK_LOW, REQUEST_TYPES, CLEAN_DATA, BY_TYPE, ORDER_AZ, ORDER_ZA } from \"../actions\";\nlet initialState = {\n  pokemons: [],\n  allPokemonsCopy: [],\n  types: [],\n  details: []\n};\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case REQUEST_POKEMONS:\n      return { ...state,\n        pokemons: action.payload.data,\n        allPokemonsCopy: action.payload.data\n      };\n\n    case REQUEST_POKEMONS_BY_ID:\n      return { ...state,\n        details: action.payload.data\n      };\n\n    case REQUEST_POKEMONS_BY_NAME:\n      return { ...state,\n        pokemons: action.payload.data\n      };\n\n    case REQUEST_TYPES:\n      return { ...state,\n        types: action.payload.data\n      };\n\n    case FILTER_BY_ATTACK_HIGH:\n      let byAttack = state.allPokemonsCopy.sort((b, a) => a.attack - b.attack);\n      return { ...state,\n        pokemons: [...byAttack]\n      };\n\n    case FILTER_BY_ATTACK_LOW:\n      let byASC = state.allPokemonsCopy.sort((a, b) => a.attack - b.attack);\n      return { ...state,\n        pokemons: [...byASC]\n      };\n\n    case ORDER_AZ:\n      let az = state.allPokemonsCopy;\n      let asc = az.sort((a, b) => a.name.charCodeAt(0) - b.name.charCodeAt(0));\n      return { ...state,\n        pokemons: [...asc]\n      };\n\n    case ORDER_ZA:\n      {\n        let za = state.allPokemonsCopy;\n        let asc = az.sort((b, ac) => a.name.charCodeAt(0) - b.name.charCodeAt(0));\n        let orderZA = za.sort((b, a) => a.name - b.name);\n        return { ...state,\n          pokemos: [...orderZA]\n        };\n      }\n\n    case BY_TYPE:\n      let filter = state.allPokemonsCopy.filter(e => e.type);\n      let ByType = filter.filter(e => e.type.includes(action.payload));\n      return { ...state,\n        pokemons: ByType\n      };\n\n    case CLEAN_DATA:\n      return { ...state,\n        details: action.payload\n      };\n\n    default:\n      {\n        return state;\n      }\n  }\n}","map":{"version":3,"names":["REQUEST_POKEMONS","REQUEST_POKEMONS_BY_ID","REQUEST_POKEMONS_BY_NAME","FILTER_BY_ATTACK_HIGH","FILTER_BY_ATTACK_LOW","REQUEST_TYPES","CLEAN_DATA","BY_TYPE","ORDER_AZ","ORDER_ZA","initialState","pokemons","allPokemonsCopy","types","details","reducer","state","action","type","payload","data","byAttack","sort","b","a","attack","byASC","az","asc","name","charCodeAt","za","ac","orderZA","pokemos","filter","e","ByType","includes"],"sources":["C:/Users/Mario/OneDrive/Desktop/MyUnity/PI/PokeminPI/Pokemon-PI-MarioVidal/client/src/store/reducer/index.js"],"sourcesContent":["import { REQUEST_POKEMONS, \r\n        REQUEST_POKEMONS_BY_ID, \r\n        REQUEST_POKEMONS_BY_NAME, \r\n        FILTER_BY_ATTACK_HIGH, \r\n        FILTER_BY_ATTACK_LOW,\r\n        REQUEST_TYPES,\r\n        CLEAN_DATA,\r\n        BY_TYPE,\r\n        ORDER_AZ,\r\n        ORDER_ZA\r\n}   from \"../actions\";\r\n\r\nlet initialState = {\r\n    pokemons: [],\r\n    allPokemonsCopy: [],\r\n    types: [],\r\n    details: []\r\n}\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case REQUEST_POKEMONS:\r\n            return {\r\n                ...state,\r\n                pokemons: action.payload.data,\r\n                allPokemonsCopy: action.payload.data\r\n            }\r\n        case REQUEST_POKEMONS_BY_ID: \r\n            return {\r\n                ...state,\r\n                details: action.payload.data\r\n            }\r\n        case REQUEST_POKEMONS_BY_NAME:\r\n            return {\r\n                ...state,\r\n                pokemons: action.payload.data\r\n            }\r\n\r\n        case REQUEST_TYPES:\r\n            return {\r\n                ...state,\r\n                types: action.payload.data\r\n            }\r\n\r\n        case FILTER_BY_ATTACK_HIGH:\r\n            let byAttack = state.allPokemonsCopy.sort((b, a) => a.attack - b.attack)\r\n            return {\r\n                ...state,\r\n                pokemons: [...byAttack]\r\n            }\r\n\r\n        case FILTER_BY_ATTACK_LOW: \r\n            let byASC = state.allPokemonsCopy.sort((a, b) => a.attack - b.attack)\r\n            \r\n            return {\r\n                ...state,\r\n                pokemons: [...byASC]\r\n            }\r\n\r\n        case ORDER_AZ: \r\n            let az = state.allPokemonsCopy\r\n            let asc = az.sort((a, b) => a.name.charCodeAt(0) - b.name.charCodeAt(0))\r\n\r\n            return {    \r\n                ...state,\r\n                pokemons: [...asc]\r\n            }       \r\n\r\n        case ORDER_ZA: {\r\n                let za = state.allPokemonsCopy\r\n                let asc = az.sort((b,ac) => a.name.charCodeAt(0) - b.name.charCodeAt(0))\r\n                let orderZA= za.sort((b, a) => a.name - b.name)\r\n                return {\r\n                    ...state,\r\n                    pokemos: [...orderZA]\r\n                }\r\n            }\r\n\r\n        case BY_TYPE:\r\n        let filter = state.allPokemonsCopy.filter((e) => e.type)\r\n        let ByType = filter.filter(e => e.type.includes(action.payload))\r\n        \r\n            return {\r\n                ...state,\r\n                pokemons: ByType\r\n            }\r\n        case CLEAN_DATA:\r\n                return {\r\n                    ...state,\r\n                    details: action.payload,\r\n                };\r\n        \r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}