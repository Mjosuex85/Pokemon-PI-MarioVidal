{"ast":null,"code":"import axios from 'axios';\nexport const REQUEST_POKEMONS = \"REQUEST_POKEMONS\";\nexport const REQUEST_POKEMONS_BY_NAME = \"REQUEST_POKEMONS_BY_NAME\";\nexport const REQUEST_POKEMONS_BY_ID = \"REQUEST_POKEMONS_BY_ID\";\nexport const REQUEST_PRUEBA = \"REQUEST_PRUEBA\";\nlet PokemonsRoute = `http://localhost:3001/pokemons/`;\n/* let TypesRoute = `http://localhost:3001/types` */\n\nexport function getPokemons() {\n  return async function (dispatch) {\n    try {\n      return axios.get(PokemonsRoute).then(pokemons => {\n        return dispatch({\n          type: REQUEST_POKEMONS,\n          payload: pokemons\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n;\nexport function searchPokemonsByName(name) {\n  /* return async function(dispatch) {\r\n      await axios.get(`http://localhost:3001/pokemons?name=`+ name)\r\n      .then((pokemonsName) => {\r\n          dispatch({\r\n              type: REQUEST_POKEMONS_BY_NAME,\r\n              payload: pokemonsName\r\n          })\r\n      })\r\n  } */\n  return async function (dispatch) {\n    try {\n      const json = await axios(`http://localhost:3001/pokemons?name=${name}`);\n      return dispatch({\n        type: 'GET_POKE_NAME',\n        payload: json.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n;\nexport function searchPokemonsById(id) {\n  return async function (dispatch) {\n    await axios.get(PokemonsRoute + id).then(pokemonsById => {\n      dispatch({\n        type: REQUEST_POKEMONS_BY_ID,\n        payload: pokemonsById\n      });\n    });\n  };\n}\n;\nexport function prueba() {\n  return function (dispatch) {\n    dispatch({\n      type: REQUEST_PRUEBA,\n      payload: [\"Cambió la prueba :D\"]\n    });\n  };\n}\n;","map":{"version":3,"names":["axios","REQUEST_POKEMONS","REQUEST_POKEMONS_BY_NAME","REQUEST_POKEMONS_BY_ID","REQUEST_PRUEBA","PokemonsRoute","getPokemons","dispatch","get","then","pokemons","type","payload","error","console","log","searchPokemonsByName","name","json","data","searchPokemonsById","id","pokemonsById","prueba"],"sources":["C:/Users/Mario/OneDrive/Desktop/MyUnity/PI/PokeminPI/Pokemon-PI-MarioVidal/client/src/store/actions/index.js"],"sourcesContent":["import axios from 'axios'\r\nexport const REQUEST_POKEMONS = \"REQUEST_POKEMONS\"\r\nexport const REQUEST_POKEMONS_BY_NAME = \"REQUEST_POKEMONS_BY_NAME\"\r\nexport const REQUEST_POKEMONS_BY_ID = \"REQUEST_POKEMONS_BY_ID\"\r\nexport const REQUEST_PRUEBA = \"REQUEST_PRUEBA\"\r\n\r\nlet PokemonsRoute = `http://localhost:3001/pokemons/`\r\n/* let TypesRoute = `http://localhost:3001/types` */\r\n\r\n\r\nexport function getPokemons() {\r\n    return async function(dispatch) {\r\n        try { return axios.get(PokemonsRoute)\r\n               .then((pokemons) => {\r\n                return dispatch({\r\n                    type: REQUEST_POKEMONS,\r\n                    payload: pokemons\r\n                })\r\n            \r\n    })\r\n    }\r\n        catch(error) {\r\n         console.log(error)\r\n        }\r\n}\r\n};\r\n\r\nexport function searchPokemonsByName(name) {\r\n    /* return async function(dispatch) {\r\n        await axios.get(`http://localhost:3001/pokemons?name=`+ name)\r\n        .then((pokemonsName) => {\r\n            dispatch({\r\n                type: REQUEST_POKEMONS_BY_NAME,\r\n                payload: pokemonsName\r\n            })\r\n        })\r\n    } */\r\n    return async function(dispatch) {\r\n        try {\r\n            const json = await axios(`http://localhost:3001/pokemons?name=${name}`)\r\n            return dispatch({type: 'GET_POKE_NAME', payload: json.data}) \r\n        } catch (error) {console.log(error)}\r\n    }\r\n};\r\n\r\nexport function searchPokemonsById(id) {\r\n    return async function(dispatch) {\r\n        await axios.get(PokemonsRoute + id)\r\n        .then((pokemonsById) => {\r\n            dispatch({\r\n                type: REQUEST_POKEMONS_BY_ID,\r\n                payload: pokemonsById\r\n            })\r\n        })\r\n    }\r\n};\r\n\r\nexport function prueba() {\r\n    return function(dispatch) {\r\n        dispatch({\r\n            type: REQUEST_PRUEBA,\r\n            payload: [\"Cambió la prueba :D\"]\r\n        })\r\n    }\r\n};"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AACP,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,IAAIC,aAAa,GAAI,iCAArB;AACA;;AAGA,OAAO,SAASC,WAAT,GAAuB;EAC1B,OAAO,gBAAeC,QAAf,EAAyB;IAC5B,IAAI;MAAE,OAAOP,KAAK,CAACQ,GAAN,CAAUH,aAAV,EACLI,IADK,CACCC,QAAD,IAAc;QACnB,OAAOH,QAAQ,CAAC;UACZI,IAAI,EAAEV,gBADM;UAEZW,OAAO,EAAEF;QAFG,CAAD,CAAf;MAKX,CAPgB,CAAP;IAQT,CARG,CASA,OAAMG,KAAN,EAAa;MACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACA;EACR,CAbG;AAcH;AAAA;AAED,OAAO,SAASG,oBAAT,CAA8BC,IAA9B,EAAoC;EACvC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,OAAO,gBAAeV,QAAf,EAAyB;IAC5B,IAAI;MACA,MAAMW,IAAI,GAAG,MAAMlB,KAAK,CAAE,uCAAsCiB,IAAK,EAA7C,CAAxB;MACA,OAAOV,QAAQ,CAAC;QAACI,IAAI,EAAE,eAAP;QAAwBC,OAAO,EAAEM,IAAI,CAACC;MAAtC,CAAD,CAAf;IACH,CAHD,CAGE,OAAON,KAAP,EAAc;MAACC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IAAmB;EACvC,CALD;AAMH;AAAA;AAED,OAAO,SAASO,kBAAT,CAA4BC,EAA5B,EAAgC;EACnC,OAAO,gBAAed,QAAf,EAAyB;IAC5B,MAAMP,KAAK,CAACQ,GAAN,CAAUH,aAAa,GAAGgB,EAA1B,EACLZ,IADK,CACCa,YAAD,IAAkB;MACpBf,QAAQ,CAAC;QACLI,IAAI,EAAER,sBADD;QAELS,OAAO,EAAEU;MAFJ,CAAD,CAAR;IAIH,CANK,CAAN;EAOH,CARD;AASH;AAAA;AAED,OAAO,SAASC,MAAT,GAAkB;EACrB,OAAO,UAAShB,QAAT,EAAmB;IACtBA,QAAQ,CAAC;MACLI,IAAI,EAAEP,cADD;MAELQ,OAAO,EAAE,CAAC,qBAAD;IAFJ,CAAD,CAAR;EAIH,CALD;AAMH;AAAA"},"metadata":{},"sourceType":"module"}